/*
 * Copyright (C) 2017 
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.sickjumps.rollinish.gui;

import com.sickjumps.rollinish.campaign.Campaign;
import com.sickjumps.rollinish.log.CampaignLogEvent;
import com.sickjumps.rollinish.log.CampaignLogManager;
import java.awt.Color;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;
import com.sickjumps.rollinish.log.CampaignLogEventListener;

/**
 *
 * @author Nathan
 */
public class CampaignFrame extends JFrame implements CampaignLogEventListener {
    
    private final CampaignLogManager manager;
    private final EncounterPanelFactory panelFactory;

    /**
     * Creates new form CampaignFrame
     */
    public CampaignFrame(Campaign campaign, CampaignLogManager manager, EncounterPanelFactory panelFactory) {
        this.panelFactory = panelFactory;
        this.setTitle("RollInish");
        
        initComponents();
        
        this.manager = manager;
        this.manager.addTurnLogEventListener(this);
    }
    
    @Override
    public void onMessageLogged(CampaignLogEvent e) {
        this.txtTurnLog.append(e.getMessage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new JScrollPane();
        txtTurnLog = new JTextArea();
        pnlEncounterPanel = panelFactory.buildPanel();
        lblAvailable = new JLabel();
        lblActive = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        txtTurnLog.setColumns(20);
        txtTurnLog.setRows(5);
        jScrollPane1.setViewportView(txtTurnLog);

        pnlEncounterPanel.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));

        lblAvailable.setFont(new Font("Dialog", 1, 24)); // NOI18N
        lblAvailable.setText("Available Players");

        lblActive.setFont(new Font("Dialog", 1, 24)); // NOI18N
        lblActive.setText("Active Players");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAvailable)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 643, Short.MAX_VALUE)
                        .addComponent(lblActive))
                    .addComponent(pnlEncounterPanel, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(lblActive)
                    .addComponent(lblAvailable))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlEncounterPanel, GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JScrollPane jScrollPane1;
    private JLabel lblActive;
    private JLabel lblAvailable;
    private JPanel pnlEncounterPanel;
    private JTextArea txtTurnLog;
    // End of variables declaration//GEN-END:variables
}
