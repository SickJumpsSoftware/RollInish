/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sickjumps.rollinish.gui;

import com.sickjumps.rollinish.campaign.Campaign;
import com.sickjumps.rollinish.campaign.character.Monster;
import com.sickjumps.rollinish.campaign.character.Participant;
import com.sickjumps.rollinish.gui.table.PlayerTableFormat;
import com.sickjumps.rollinish.gui.table.PlayerTableModel;
import com.sickjumps.rollinish.gui.table.RowObjectTableModel;
import com.sickjumps.rollinish.gui.transfer.ExportTransferHandler;
import java.awt.Color;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;
import javax.swing.border.LineBorder;

/**
 *
 * @author Nathan
 */
public final class CampaignViewerFrame extends JFrame {

    private final List<Monster> monsterData;
    private final Campaign campaign;
    
    /**
     * Creates new form CampaignViewerFrame
     */
    public CampaignViewerFrame(Campaign c, List<Monster> monsterData) {
        this.monsterData = monsterData;
        this.campaign = c;
        
        initComponents();
        this.tblAvailable.setTransferHandler(new ExportTransferHandler());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanel();
        leftButtonPanel = new JPanel();
        btnAddAvailable = new JButton();
        btnRemoveAvailable = new JButton();
        rightButtonPanel = new JPanel();
        btnRemoveActive = new JButton();
        btnNextTurn = new JButton();
        btnAddMonster = new JButton();
        btnClearTable = new JButton();
        tabMonsterTable = PaneCreator.createMonsterPane(monsterData);
        jScrollPane2 = new JScrollPane();
        tblAvailable = new JTable();
        tabEncounterPane = PaneCreator.createEncounterTabbedPane(campaign);

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(Frame.MAXIMIZED_BOTH);

        jPanel1.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));

        leftButtonPanel.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));

        btnAddAvailable.setText("Add Player");
        btnAddAvailable.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnAddAvailableActionPerformed(evt);
            }
        });

        btnRemoveAvailable.setText("Remove Player");
        btnRemoveAvailable.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnRemoveAvailableActionPerformed(evt);
            }
        });

        GroupLayout leftButtonPanelLayout = new GroupLayout(leftButtonPanel);
        leftButtonPanel.setLayout(leftButtonPanelLayout);
        leftButtonPanelLayout.setHorizontalGroup(leftButtonPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(leftButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftButtonPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddAvailable, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemoveAvailable, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        leftButtonPanelLayout.setVerticalGroup(leftButtonPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(leftButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddAvailable, GroupLayout.PREFERRED_SIZE, 85, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoveAvailable, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rightButtonPanel.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));

        btnRemoveActive.setText("Remove Player");

        btnNextTurn.setText("Next Turn");

        btnAddMonster.setText("Add Custom Enemy");

        btnClearTable.setText("Clear Encounter");

        GroupLayout rightButtonPanelLayout = new GroupLayout(rightButtonPanel);
        rightButtonPanel.setLayout(rightButtonPanelLayout);
        rightButtonPanelLayout.setHorizontalGroup(rightButtonPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(rightButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightButtonPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoveActive, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNextTurn, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClearTable, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.TRAILING, rightButtonPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddMonster)))
                .addContainerGap())
        );
        rightButtonPanelLayout.setVerticalGroup(rightButtonPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(rightButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRemoveActive)
                .addGap(18, 18, 18)
                .addComponent(btnNextTurn)
                .addGap(18, 18, 18)
                .addComponent(btnClearTable)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddMonster)
                .addGap(182, 182, 182))
        );

        tblAvailable.setModel(new PlayerTableModel(campaign.getAvailable(), new PlayerTableFormat()));
        tblAvailable.setDragEnabled(true);
        tblAvailable.setFillsViewportHeight(true);
        tblAvailable.setPreferredSize(this.tabMonsterTable.getPreferredSize());
        jScrollPane2.setViewportView(tblAvailable);

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(leftButtonPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(tabMonsterTable, GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tabEncounterPane)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightButtonPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(leftButtonPanel, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rightButtonPanel, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                            .addComponent(tabEncounterPane))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tabMonsterTable, GroupLayout.PREFERRED_SIZE, 212, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddAvailableActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnAddAvailableActionPerformed
        Participant p = new AddPlayerDialog(this, true).getResult();
        
        if (p != null) {
            this.campaign.addAvailablePlayer(p);
        }
    }//GEN-LAST:event_btnAddAvailableActionPerformed

    private void btnRemoveAvailableActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnRemoveAvailableActionPerformed
        Participant p = (Participant)((RowObjectTableModel)this.tblAvailable.getModel()).getRow(this.tblAvailable.getSelectedRow());
        
        this.campaign.removeAvailablePlayer(p);
    }//GEN-LAST:event_btnRemoveAvailableActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton btnAddAvailable;
    private JButton btnAddMonster;
    private JButton btnClearTable;
    private JButton btnNextTurn;
    private JButton btnRemoveActive;
    private JButton btnRemoveAvailable;
    private JPanel jPanel1;
    private JScrollPane jScrollPane2;
    private JPanel leftButtonPanel;
    private JPanel rightButtonPanel;
    private JTabbedPane tabEncounterPane;
    private JTabbedPane tabMonsterTable;
    private JTable tblAvailable;
    // End of variables declaration//GEN-END:variables
}
