/*
 * Copyright (C) 2017 
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.sickjumps.rollinish.campaign;

import com.sickjumps.rollinish.ApplicationConfiguration;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;

/**
 *
 * @author Nathan
 */
public class NewCampaignDialog extends JDialog {
    
    private final CampaignInfoDTO nci;
    private final ApplicationConfiguration config;

    /**
     * Creates new form NewCampaignDialog
     */
    public NewCampaignDialog(Frame parent, boolean modal, ApplicationConfiguration config) {
        super(parent, modal);

        initComponents();
        
        this.nci = new CampaignInfoDTO();
        this.config = config;
        
        this.setTitle("Enter New Campaign Information");
        
        this.txtSaveDirectory.setText(config.getLastCampaignSaveDirectory());
    }
    
    public CampaignInfoDTO getResult() {
        this.setVisible(true);
        return nci;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jfcDirectoryChooser = new JFileChooser();
        lblName = new JLabel();
        txtCampaignName = new JTextField();
        lblLocation = new JLabel();
        txtSaveDirectory = new JTextField();
        btnBrowse = new JButton();
        btnCancel = new JButton();
        btnOK = new JButton();

        jfcDirectoryChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        setModalityType(ModalityType.APPLICATION_MODAL);

        lblName.setText("Campaign Name");

        txtCampaignName.setName("campaignName"); // NOI18N

        lblLocation.setText("Save Location");

        txtSaveDirectory.setName("saveDirectory"); // NOI18N

        btnBrowse.setText("...");
        btnBrowse.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        btnCancel.setMnemonic(KeyEvent.VK_C);
        btnCancel.setText("Cancel");
        btnCancel.setName("cancelButton"); // NOI18N
        btnCancel.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOK.setMnemonic(KeyEvent.VK_O);
        btnOK.setText("OK");
        btnOK.setName("okButton"); // NOI18N
        btnOK.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(lblLocation)
                            .addComponent(lblName))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(txtCampaignName)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSaveDirectory, GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBrowse))))
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnOK)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtCampaignName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLocation)
                    .addComponent(txtSaveDirectory, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowse))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOK))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        if (jfcDirectoryChooser.showDialog(this, "Select") == JFileChooser.APPROVE_OPTION) {
            this.txtSaveDirectory.setText(jfcDirectoryChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnOKActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed

        do {
            if (!validateCampaignName(this.txtCampaignName.getText())) {

                JOptionPane.showMessageDialog(this, "Invalid (empty) campaign name");

            } else if (!validateSaveFolder(this.txtSaveDirectory.getText())) {

                JOptionPane.showMessageDialog(this, "Unable to write to selected directory");

            } else {

                nci.setCampaignName(this.txtCampaignName.getText());
                nci.setSaveDirectory(this.txtSaveDirectory.getText());

                this.setVisible(false);

            }
        } while (this.isVisible());
        
        this.dispose();
        
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton btnBrowse;
    private JButton btnCancel;
    private JButton btnOK;
    private JFileChooser jfcDirectoryChooser;
    private JLabel lblLocation;
    private JLabel lblName;
    private JTextField txtCampaignName;
    private JTextField txtSaveDirectory;
    // End of variables declaration//GEN-END:variables

    private boolean validateCampaignName(String campaignName) {
        return !campaignName.isEmpty();
    }

    private boolean validateSaveFolder(String pathString) {

        return Files.isWritable(Paths.get(pathString));
    }
}
