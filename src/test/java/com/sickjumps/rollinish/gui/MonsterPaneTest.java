/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sickjumps.rollinish.gui;

import com.sickjumps.rollinish.campaign.character.Monster;
import com.sickjumps.rollinish.campaign.io.MonsterDataParser;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.Consumer;
import javax.swing.GroupLayout;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;

/**
 *
 * @author Nathan
 */
public class MonsterPaneTest extends JPanel {

    private final List<Monster> monsterData;
    /**
     * Creates new form MonsterPaneTest
     */
    public MonsterPaneTest(List<Monster> monsterData) {
        this.monsterData = monsterData;
        
        initComponents();
        
        this.insertMonsterData();
    }
    
    private void insertMonsterData() {
        Map<String, List<Monster>> monstersByCR = new LinkedHashMap<>();
        
        this.monsterData.stream().forEach((m) -> {
            List<Monster> subList = monstersByCR.getOrDefault(m.getChallenge(), new ArrayList<>());
            subList.add(m);
            monstersByCR.put(m.getChallenge(), subList);
        });
        
        monstersByCR.keySet().stream().forEach((String cr) -> {
            JTable table = new JTable(new MonsterTableModel(monstersByCR.get(cr)));
            
            table.setDragEnabled(true);
            table.setTransferHandler(new MonsterTransferHandler());
            
            this.jTabbedPane1.addTab(cr, new JScrollPane(table));
        });
    }
    
    public static void main(String[] args) {
        InputStream is = MonsterPaneTest.class.getClassLoader().getResourceAsStream("monsters.csv");
        
        List<Monster> data = MonsterDataParser.getMonsterData(is);
        
        JFrame test = new JFrame();
        
        test.add(new MonsterPaneTest(data));
        test.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        test.pack();
        
        test.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new JTabbedPane();

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
